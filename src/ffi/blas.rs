#![allow(non_camel_case_types)]

use core::ffi::c_char;
use num_complex::*;

#[cfg(not(feature = "ilp64"))]
pub type blas_int = i32;
#[cfg(feature = "ilp64")]
pub type blas_int = i64;

pub type c32 = Complex<f32>;
pub type c64 = Complex<f64>;

/* automatically generated by rust-bindgen 0.69.4 */

extern "C" {
    pub fn dcabs1_(z: *const c64) -> f64;
}
extern "C" {
    pub fn scabs1_(c: *const c32) -> f32;
}
extern "C" {
    pub fn dasum_(n: *const blas_int, x: *const f64, incx: *const blas_int) -> f64;
}
extern "C" {
    pub fn dzasum_(n: *const blas_int, x: *const c64, incx: *const blas_int) -> f64;
}
extern "C" {
    pub fn sasum_(n: *const blas_int, x: *const f32, incx: *const blas_int) -> f32;
}
extern "C" {
    pub fn scasum_(n: *const blas_int, x: *const c32, incx: *const blas_int) -> f32;
}
extern "C" {
    pub fn caxpy_(
        n: *const blas_int,
        alpha: *const c32,
        x: *const c32,
        incx: *const blas_int,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn daxpy_(
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn saxpy_(
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zaxpy_(
        n: *const blas_int,
        alpha: *const c64,
        x: *const c64,
        incx: *const blas_int,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn ccopy_(
        n: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dcopy_(
        n: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn scopy_(
        n: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zcopy_(
        n: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn cdotc_(
        pres: *mut c32,
        n: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn cdotu_(
        pres: *mut c32,
        n: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn ddot_(
        n: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        y: *const f64,
        incy: *const blas_int,
    ) -> f64;
}
extern "C" {
    pub fn dsdot_(
        n: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
    ) -> f64;
}
extern "C" {
    pub fn sdot_(
        n: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
    ) -> f32;
}
extern "C" {
    pub fn sdsdot_(
        n: *const blas_int,
        sb: *const f32,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
    ) -> f32;
}
extern "C" {
    pub fn zdotc_(
        pres: *mut c64,
        n: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zdotu_(
        pres: *mut c64,
        n: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn icamax_(n: *const blas_int, x: *const c32, incx: *const blas_int) -> blas_int;
}
extern "C" {
    pub fn idamax_(n: *const blas_int, x: *const f64, incx: *const blas_int) -> blas_int;
}
extern "C" {
    pub fn isamax_(n: *const blas_int, x: *const f32, incx: *const blas_int) -> blas_int;
}
extern "C" {
    pub fn izamax_(n: *const blas_int, x: *const c64, incx: *const blas_int) -> blas_int;
}
extern "C" {
    pub fn dnrm2_(n: *const blas_int, x: *const f64, incx: *const blas_int) -> f64;
}
extern "C" {
    pub fn dznrm2_(n: *const blas_int, x: *const c64, incx: *const blas_int) -> f64;
}
extern "C" {
    pub fn snrm2_(n: *const blas_int, x: *const f32, incx: *const blas_int) -> f32;
}
extern "C" {
    pub fn scnrm2_(n: *const blas_int, x: *const c32, incx: *const blas_int) -> f32;
}
extern "C" {
    pub fn cscal_(n: *const blas_int, a: *const c32, x: *mut c32, incx: *const blas_int);
}
extern "C" {
    pub fn csscal_(n: *const blas_int, a: *const f32, x: *mut c32, incx: *const blas_int);
}
extern "C" {
    pub fn dscal_(n: *const blas_int, a: *const f64, x: *mut f64, incx: *const blas_int);
}
extern "C" {
    pub fn sscal_(n: *const blas_int, a: *const f32, x: *mut f32, incx: *const blas_int);
}
extern "C" {
    pub fn zdscal_(n: *const blas_int, a: *const f64, x: *mut c64, incx: *const blas_int);
}
extern "C" {
    pub fn zscal_(n: *const blas_int, a: *const c64, x: *mut c64, incx: *const blas_int);
}
extern "C" {
    pub fn cswap_(n: *const blas_int, x: *mut c32, incx: *const blas_int, y: *mut c32, incy: *const blas_int);
}
extern "C" {
    pub fn dswap_(n: *const blas_int, x: *mut f64, incx: *const blas_int, y: *mut f64, incy: *const blas_int);
}
extern "C" {
    pub fn sswap_(n: *const blas_int, x: *mut f32, incx: *const blas_int, y: *mut f32, incy: *const blas_int);
}
extern "C" {
    pub fn zswap_(n: *const blas_int, x: *mut c64, incx: *const blas_int, y: *mut c64, incy: *const blas_int);
}
extern "C" {
    pub fn csrot_(
        n: *const blas_int,
        x: *mut c32,
        incx: *const blas_int,
        y: *mut c32,
        incy: *const blas_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn drot_(
        n: *const blas_int,
        x: *mut f64,
        incx: *const blas_int,
        y: *mut f64,
        incy: *const blas_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn srot_(
        n: *const blas_int,
        x: *mut f32,
        incx: *const blas_int,
        y: *mut f32,
        incy: *const blas_int,
        c: *const f32,
        s: *const f32,
    );
}
extern "C" {
    pub fn zdrot_(
        n: *const blas_int,
        x: *mut c64,
        incx: *const blas_int,
        y: *mut c64,
        incy: *const blas_int,
        c: *const f64,
        s: *const f64,
    );
}
extern "C" {
    pub fn crotg_(a: *mut c32, b: *const c32, c: *mut f32, s: *mut c32);
}
extern "C" {
    pub fn drotg_(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64);
}
extern "C" {
    pub fn srotg_(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32);
}
extern "C" {
    pub fn zrotg_(a: *mut c64, b: *const c64, c: *mut f64, s: *mut c64);
}
extern "C" {
    pub fn drotm_(
        n: *const blas_int,
        x: *mut f64,
        incx: *const blas_int,
        y: *mut f64,
        incy: *const blas_int,
        param: *const f64,
    );
}
extern "C" {
    pub fn srotm_(
        n: *const blas_int,
        x: *mut f32,
        incx: *const blas_int,
        y: *mut f32,
        incy: *const blas_int,
        param: *const f32,
    );
}
extern "C" {
    pub fn drotmg_(d1: *mut f64, d2: *mut f64, x1: *mut f64, y1: *const f64, param: *mut f64);
}
extern "C" {
    pub fn srotmg_(d1: *mut f32, d2: *mut f32, x1: *mut f32, y1: *const f32, param: *mut f32);
}
extern "C" {
    pub fn cgemv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        beta: *const c32,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dgemv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn sgemv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zgemv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        beta: *const c64,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn cgerc_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
        a: *mut c32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn cgeru_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
        a: *mut c32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn dger_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        y: *const f64,
        incy: *const blas_int,
        a: *mut f64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn sger_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
        a: *mut f32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn zgerc_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
        a: *mut c64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn zgeru_(
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
        a: *mut c64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn chemv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        beta: *const c32,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dsymv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn ssymv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zhemv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        beta: *const c64,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn cher_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const c32,
        incx: *const blas_int,
        a: *mut c32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn dsyr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        a: *mut f64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn ssyr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        a: *mut f32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn zher_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const c64,
        incx: *const blas_int,
        a: *mut c64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn cher2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c32,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
        a: *mut c32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn dsyr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        y: *const f64,
        incy: *const blas_int,
        a: *mut f64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn ssyr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
        a: *mut f32,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn zher2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c64,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
        a: *mut c64,
        lda: *const blas_int,
    );
}
extern "C" {
    pub fn ctrmv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const c32,
        lda: *const blas_int,
        b: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtrmv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const f64,
        lda: *const blas_int,
        b: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn strmv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const f32,
        lda: *const blas_int,
        b: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztrmv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const c64,
        lda: *const blas_int,
        b: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ctrsv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const c32,
        lda: *const blas_int,
        b: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtrsv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const f64,
        lda: *const blas_int,
        b: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn strsv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const f32,
        lda: *const blas_int,
        b: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztrsv_(
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        a: *const c64,
        lda: *const blas_int,
        b: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn chpmv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c32,
        ap: *const c32,
        x: *const c32,
        incx: *const blas_int,
        beta: *const c32,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dspmv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        ap: *const f64,
        x: *const f64,
        incx: *const blas_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn sspmv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        ap: *const f32,
        x: *const f32,
        incx: *const blas_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zhpmv_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c64,
        ap: *const c64,
        x: *const c64,
        incx: *const blas_int,
        beta: *const c64,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn chpr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const c32,
        incx: *const blas_int,
        ap: *mut c32,
    );
}
extern "C" {
    pub fn dspr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn sspr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn zhpr_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const c64,
        incx: *const blas_int,
        ap: *mut c64,
    );
}
extern "C" {
    pub fn chpr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c32,
        x: *const c32,
        incx: *const blas_int,
        y: *const c32,
        incy: *const blas_int,
        ap: *mut c32,
    );
}
extern "C" {
    pub fn dspr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const blas_int,
        y: *const f64,
        incy: *const blas_int,
        ap: *mut f64,
    );
}
extern "C" {
    pub fn sspr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const f32,
        x: *const f32,
        incx: *const blas_int,
        y: *const f32,
        incy: *const blas_int,
        ap: *mut f32,
    );
}
extern "C" {
    pub fn zhpr2_(
        uplo: *const c_char,
        n: *const blas_int,
        alpha: *const c64,
        x: *const c64,
        incx: *const blas_int,
        y: *const c64,
        incy: *const blas_int,
        ap: *mut c64,
    );
}
extern "C" {
    pub fn ctpmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const c32,
        x: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtpmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn stpmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztpmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const c64,
        x: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ctpsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const c32,
        x: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtpsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn stpsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const f32,
        x: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztpsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        ap: *const c64,
        x: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn cgbmv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        kl: *const blas_int,
        ku: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        beta: *const c32,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dgbmv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        kl: *const blas_int,
        ku: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn sgbmv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        kl: *const blas_int,
        ku: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zgbmv_(
        trans: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        kl: *const blas_int,
        ku: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        beta: *const c64,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn chbmv_(
        uplo: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        x: *const c32,
        incx: *const blas_int,
        beta: *const c32,
        y: *mut c32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn dsbmv_(
        uplo: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        x: *const f64,
        incx: *const blas_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn ssbmv_(
        uplo: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        x: *const f32,
        incx: *const blas_int,
        beta: *const f32,
        y: *mut f32,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn zhbmv_(
        uplo: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        x: *const c64,
        incx: *const blas_int,
        beta: *const c64,
        y: *mut c64,
        incy: *const blas_int,
    );
}
extern "C" {
    pub fn ctbmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const c32,
        lda: *const blas_int,
        x: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtbmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const f64,
        lda: *const blas_int,
        x: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn stbmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const f32,
        lda: *const blas_int,
        x: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztbmv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const c64,
        lda: *const blas_int,
        x: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ctbsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const c32,
        lda: *const blas_int,
        x: *mut c32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn dtbsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const f64,
        lda: *const blas_int,
        x: *mut f64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn stbsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const f32,
        lda: *const blas_int,
        x: *mut f32,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn ztbsv_(
        uplo: *const c_char,
        trans: *const c_char,
        diag: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        a: *const c64,
        lda: *const blas_int,
        x: *mut c64,
        incx: *const blas_int,
    );
}
extern "C" {
    pub fn cgemm_(
        transa: *const c_char,
        transb: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn dgemm_(
        transa: *const c_char,
        transb: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *const f64,
        ldb: *const blas_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn sgemm_(
        transa: *const c_char,
        transb: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *const f32,
        ldb: *const blas_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zgemm_(
        transa: *const c_char,
        transb: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn chemm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn csymm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn dsymm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *const f64,
        ldb: *const blas_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn ssymm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *const f32,
        ldb: *const blas_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zhemm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zsymm_(
        side: *const c_char,
        uplo: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn cherk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const c32,
        lda: *const blas_int,
        beta: *const f32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn csyrk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn dsyrk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn ssyrk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zherk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const c64,
        lda: *const blas_int,
        beta: *const f64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zsyrk_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn cher2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const f32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn csyr2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn dsyr2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *const f64,
        ldb: *const blas_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn ssyr2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *const f32,
        ldb: *const blas_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zher2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const f64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zsyr2k_(
        uplo: *const c_char,
        trans: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn ctrmm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *mut c32,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn dtrmm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *mut f64,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn strmm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *mut f32,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn ztrmm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *mut c64,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn ctrsm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *mut c32,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn dtrsm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *mut f64,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn strsm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *mut f32,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn ztrsm_(
        side: *const c_char,
        uplo: *const c_char,
        transa: *const c_char,
        diag: *const c_char,
        m: *const blas_int,
        n: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *mut c64,
        ldb: *const blas_int,
    );
}
extern "C" {
    pub fn sgemmt_(
        uplo: *const c_char,
        transa: *const c_char,
        transb: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f32,
        a: *const f32,
        lda: *const blas_int,
        b: *const f32,
        ldb: *const blas_int,
        beta: *const f32,
        c: *mut f32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn cgemmt_(
        uplo: *const c_char,
        transa: *const c_char,
        transb: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c32,
        a: *const c32,
        lda: *const blas_int,
        b: *const c32,
        ldb: *const blas_int,
        beta: *const c32,
        c: *mut c32,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn dgemmt_(
        uplo: *const c_char,
        transa: *const c_char,
        transb: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const blas_int,
        b: *const f64,
        ldb: *const blas_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const blas_int,
    );
}
extern "C" {
    pub fn zgemmt_(
        uplo: *const c_char,
        transa: *const c_char,
        transb: *const c_char,
        n: *const blas_int,
        k: *const blas_int,
        alpha: *const c64,
        a: *const c64,
        lda: *const blas_int,
        b: *const c64,
        ldb: *const blas_int,
        beta: *const c64,
        c: *mut c64,
        ldc: *const blas_int,
    );
}
